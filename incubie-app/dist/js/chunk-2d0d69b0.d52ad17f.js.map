{"version":3,"sources":["webpack:///./src/views/invitations/InvitationLinkSignUp.vue?7fc5","webpack:///src/views/invitations/InvitationLinkSignUp.vue","webpack:///./src/views/invitations/InvitationLinkSignUp.vue?6820","webpack:///./src/views/invitations/InvitationLinkSignUp.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","on","submit","$event","preventDefault","acceptInvitation","attrs","primary-title","staticClass","_v","_s","companyName","ref","rules","$rules","required","type","label","validate-on-blur","model","value","callback","$$v","fullName","trim","expression","email","keyup","checkUniqueEmail","password","block","large","color","staticRenderFns","InvitationLinkSignUpvue_type_script_lang_js_","name","components","props","data","companyId","invitedBy","boardId","firstName","lastName","computed","Object","objectSpread","vuex_esm","getCompany","getCompanies","companies","company","getCompanyIdBySlug","getCompanyById","authenticateError","errorOnAuthenticate","error","user","strategy","role","watch","created","mounted","init","methods","showSnackbar","lodash","asyncToGenerator","regeneratorRuntime","mark","_callee","wrap","_context","prev","next","$dispatchAction","$actionTypes","CHECK_UNIQUE_EMAIL","payload","stop","_acceptInvitation","_callee2","namearray","invitationMock","res","slug","serverPassword","boardSlug","gotoUrl","compareRes","errCode","errMessage","_context2","split","_id","change_case_default","a","lowerCase","replace","board","linked","ACCEPT_LINK_INVITATION","assign","sent","console","log","globalConstant","BaseUrl","bcrypt_default","compareSync","message","authenticate","window","location","t0","dir","$router","push","setAuthenticateError","apply","arguments","$route","path","str","array1","strlast","length","info","invitations_InvitationLinkSignUpvue_type_script_lang_js_","component","componentNormalizer","options","__file","__webpack_exports__"],"mappings":"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","file":"js/chunk-2d0d69b0.d52ad17f.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-form',{on:{\"submit\":function($event){$event.preventDefault();_vm.acceptInvitation()}}},[_c('v-card',[_c('v-card-title',{attrs:{\"primary-title\":\"\"}},[_c('h3',{staticClass:\"headline\"},[_vm._v(\"\\n        You are invited to join \"),_c('strong',[_vm._v(_vm._s(_vm.companyName))])])]),_c('v-card-text',[_c('v-text-field',{ref:\"fullName\",attrs:{\"rules\":[_vm.$rules.required()],\"type\":\"text\",\"label\":\"Enter your full name\",\"validate-on-blur\":\"\"},model:{value:(_vm.fullName),callback:function ($$v) {_vm.fullName=(typeof $$v === 'string'? $$v.trim(): $$v)},expression:\"fullName\"}}),_c('v-text-field',{ref:\"email\",attrs:{\"rules\":[_vm.$rules.required(),_vm.$rules.email()],\"type\":\"text\",\"label\":\"Enter your Email\",\"validate-on-blur\":\"\"},on:{\"keyup\":function($event){_vm.checkUniqueEmail()}},model:{value:(_vm.email),callback:function ($$v) {_vm.email=(typeof $$v === 'string'? $$v.trim(): $$v)},expression:\"email\"}}),_c('v-text-field',{ref:\"password\",attrs:{\"rules\":[_vm.$rules.required()],\"type\":\"password\",\"label\":\"Choose a password\",\"validate-on-blur\":\"\"},model:{value:(_vm.password),callback:function ($$v) {_vm.password=(typeof $$v === 'string'? $$v.trim(): $$v)},expression:\"password\"}})],1),_c('v-card-actions',[_c('v-btn',{attrs:{\"block\":\"\",\"large\":\"\",\"color\":\"accent\",\"type\":\"submit\"}},[_vm._v(\"\\n        Accept My Invitation\\n      \")])],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <v-form @submit.prevent=\"acceptInvitation()\">\n    <v-card>\n      <v-card-title\n        primary-title>\n        <h3 class=\"headline\">\n          \n          <!-- {{ invitation.invitedBy.firstName }} -->\n          You are invited to join <strong>{{ companyName }}</strong>\n        </h3>\n      </v-card-title>\n      <v-card-text>\n        <v-text-field\n          ref=\"fullName\"\n          v-model.trim=\"fullName\"\n          :rules=\"[$rules.required()]\"\n          type=\"text\"\n          label=\"Enter your full name\"\n          validate-on-blur/>\n        <v-text-field\n          ref=\"email\"\n          v-model.trim=\"email\"\n          :rules=\"[$rules.required(),$rules.email()]\"\n          type=\"text\"\n          label=\"Enter your Email\"\n          validate-on-blur\n          @keyup=\"checkUniqueEmail()\"/>\n        <v-text-field\n          ref=\"password\"\n          v-model.trim=\"password\"\n          :rules=\"[$rules.required()]\"\n          type=\"password\"\n          label=\"Choose a password\"\n          validate-on-blur/>\n      </v-card-text>\n      <v-card-actions>\n        <v-btn\n          block\n          large\n          color=\"accent\"\n          type=\"submit\">\n          Accept My Invitation\n        </v-btn>\n      </v-card-actions>\n    </v-card>\n  </v-form>\n</template>\n\n<script>\nimport { mapActions, mapGetters, mapMutations } from 'vuex'\nimport { debounce, get } from 'lodash'\nimport changeCase from 'change-case'\nimport bcrypt from 'bcryptjs'\nimport globalConstant from '../../globalConstant.js'\nexport default {\n  name: 'InvitationLinkSignUp',\n  components: {},\n  props: {},\n  data () {\n    return {\n      fullName: null,\n      email: null,\n      password: null,\n      companyName: null,\n      companyId: null,\n      invitedBy: null,\n      boardId: null,\n      firstName: null,\n      lastName: null,\n    }\n  },\n  computed: {\n    ...mapGetters('companies', {\n      getCompany: 'get',\n      getCompanies: 'find',\n      companies: 'list',\n      company: 'current',\n      getCompanyIdBySlug: 'getIdBySlug',\n      getCompanyById: 'getCompanyById',\n    }),\n    authenticateError () {\n      return this.errorOnAuthenticate ? this.errorOnAuthenticate.error : null\n    },\n    user () {\n      return {\n        fullName: this.fullName,\n        email: this.email,\n        password: this.password,\n        strategy: 'local',\n        role: 'member',\n      }\n    }\n  },\n  watch: {},\n  created () {\n  },\n  mounted() {\n    this.init();\n  },\n  methods: {\n    ...mapMutations('auth', [\n      'clearAuthenticateError',\n      'setAuthenticatePending',\n      'setAuthenticateError',\n      'unsetAuthenticatePending'\n    ]),\n    ...mapMutations(\"snackbar\", {\n      showSnackbar: \"show\"\n    }),\n    ...mapActions('auth', ['authenticate']),\n    checkUniqueEmail: debounce(async function () {\n      await this.$dispatchAction({\n        type: this.$actionTypes.CHECK_UNIQUE_EMAIL,\n        payload: this.user.email\n      })\n    }, 300),\n\n    async acceptInvitation () {\n      //this.init(); // ruby test del\n      let namearray = this.fullName.split(' ');\n      this.firstName = namearray[0];\n      this.lastName = namearray[1];\n\n      try {\n        let invitationMock = {\n            role: 'member',\n            company: { _id: this.companyId,\n                        name: this.companyName,\n                        slug: changeCase.lowerCase(this.companyName.replace(/ /g,''))\n                      },\n            invitedBy:{ _id: this.invitedBy, firstName: this.firstName, lastName: this.lastName},\n            board: this.boardId,\n            linked: true,\n          }\n        const res = await this.$dispatchAction({\n          type: this.$actionTypes.ACCEPT_LINK_INVITATION,\n          payload: Object.assign(invitationMock, { user: this.user })\n        })\n\n        console.log(\"ruby: response of link invitation\" , res);\n        let slug = get(res, 'data.company.slug');\n        let serverPassword = get(res, 'data.user.password');\n        let boardSlug = get(res, 'data.board.slug'); console.log(\"ruby: BoardSlug\", boardSlug);\n        let gotoUrl = globalConstant.BaseUrl + slug + \"/b/\" + boardSlug;\n        let compareRes = bcrypt.compareSync(this.password, serverPassword);\n\n        //this.$router.push({ name: 'board/main', params: { boardSlug: slug} })\n        if(!compareRes){\n          this.password = \"\";\n          this.showSnackbar({color: \"error\", message: \"Failed in Login\"});\n        }else {\n          await this.authenticate(this.user)\n          window.location= gotoUrl;\n        }\n      } catch (err) {\n        // TODO: handle error\n        const errCode = get(err, 'code');\n        const errMessage = get(err, 'data.message', 'error');\n        console.dir(err);\n        if (errCode === 403) {\n          this.$router.push({ name: 'unauthorized' });\n        } else {\n          await this.setAuthenticateError({ error: errMessage });\n        }\n        console.log(\"ruby: here catch in here\");\n      }\n    },\n\n    init() {\n      console.log(\"ruby: mounted::&&::params\", this.$route.path);\n      let str = this.$route.path;\n      let array1 = str.split('/');\n      let strlast = array1[array1.length - 2];\n      let info = strlast.split('_FAI35_');\n      console.log(info);\n      this.companyName = info[3].replace('_',' ');\n      this.companyId = info[0];\n      this.invitedBy = info[1];\n      this.boardId = info[2];\n    }\n  }\n}\n</script>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./InvitationLinkSignUp.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./InvitationLinkSignUp.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./InvitationLinkSignUp.vue?vue&type=template&id=b208eeaa&\"\nimport script from \"./InvitationLinkSignUp.vue?vue&type=script&lang=js&\"\nexport * from \"./InvitationLinkSignUp.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"InvitationLinkSignUp.vue\"\nexport default component.exports"],"sourceRoot":""}